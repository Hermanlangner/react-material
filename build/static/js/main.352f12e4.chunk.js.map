{"version":3,"sources":["components/NavBar.js","components/Course.js","components/CoursesList.js","components/CheckboxList.js","components/NestedList.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","Course","props","console","log","course","Card_default","CardMedia_default","style","height","paddingTop","image","fields","courseImage","file","url","title","CardContent_default","gutterBottom","component","description","CardActions_default","Button_default","size","href","target","client","contentful","space","accessToken","basePath","CoursesList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","courses","searchString","getCourses","getEntries","content_type","query","then","response","setState","items","catch","error","onSearchInputChange","event","value","TextField_default","padding","id","placeholder","margin","onChange","Grid_default","container","spacing","map","currentCourse","item","xs","sm","lg","xl","components_Course","Component","CheckboxList","checked","handleToggle","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","_this2","classes","className","root","List_default","ListItem_default","key","role","undefined","dense","button","onClick","Checkbox_default","tabIndex","disableRipple","ListItemText_default","primary","concat","ListItemSecondaryAction_default","IconButton_default","aria-label","Comment_default","React","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","NestedList","open","handleClick","subheader","ListSubheader_default","ListItemIcon_default","Send_default","inset","Drafts_default","MoveToInbox_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","StarBorder_default","paddingLeft","unit","App","components_NavBar","components_CoursesList","components_CheckboxList","components_NestedList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAiBeA,EAbA,WACX,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,SAAS,UACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACID,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,QAAQC,MAAM,WAAlC,mLC0BDC,EA5BA,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAERV,EAAAC,EAAAC,cAAA,WACMQ,EAAMG,OACJb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,KACID,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAWe,MAAO,CAACC,OAAQ,EAAGC,WAAY,UAC1CC,MAAOT,EAAMG,OAAOO,OAAOC,YAAYD,OAAOE,KAAKC,IACnDC,MAAOd,EAAMG,OAAOO,OAAOI,QAE3BxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,KACAD,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYyB,cAAY,EAACnB,QAAQ,WAAWoB,UAAU,MACjDjB,EAAMG,OAAOO,OAAOI,OAEzBxB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAY0B,UAAU,KACjBjB,EAAMG,OAAOO,OAAOQ,cAGzB5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,KACAD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAQ8B,KAAK,QAAQvB,MAAM,UAAUwB,KAAMtB,EAAMG,OAAOO,OAAOG,IAAKU,OAAO,UAA3E,kBAKJ,OCvBVC,EAASC,IAAwB,CACnCC,MAJa,eAKbC,YAJiB,mEAKjBC,SAAU,mCA0DCC,cAnDX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QALJI,MAAQ,CACJC,QAAS,GACTC,aAAc,IAEJT,EAIdU,WAAa,WACThB,EAAOiB,WAAW,CACdC,aAAc,SACdC,MAAOb,EAAKO,MAAME,eAErBK,KAAK,SAACC,GACHf,EAAKgB,SAAS,CAACR,QAASO,EAASE,QACjC9C,QAAQC,IAAI4B,EAAKO,MAAMC,WAE1BU,MAAM,SAACC,GACNhD,QAAQC,IAAI,yCACZD,QAAQgD,MAAMA,MAfNnB,EAkBdoB,oBAAsB,SAACC,GACnBlD,QAAQC,IAAI,qBAAuBiD,EAAM5B,OAAO6B,OAC5CD,EAAM5B,OAAO6B,MACbtB,EAAKgB,SAAS,CAACP,aAAcY,EAAM5B,OAAO6B,QAE1CtB,EAAKgB,SAAS,CAACP,aAAc,KAEjCT,EAAKU,cAvBLV,EAAKU,aAFKV,wEA4BV,OACIxC,EAAAC,EAAAC,cAAA,WACMyC,KAAKI,MAAMC,QACThD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAWe,MAAO,CAACgD,QAAS,IACxBC,GAAG,cACHC,YAAY,qBACZC,OAAO,SACPC,SAAUzB,KAAKiB,sBAEnB5D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,WAAS,EAACC,QAAS,GAAIvD,MAAO,CAACgD,QAAS,KACxCrB,KAAKI,MAAMC,QAAQwB,IAAI,SAAAC,GAAa,OAClCzE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMyE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC9E,EAAAC,EAAAC,cAAC6E,EAAD,CAAQlE,OAAQ4D,SAKhC,2BAnDMO,wJCMpBC,6MACJlC,MAAQ,CACNmC,QAAS,CAAC,MAGZC,aAAe,SAAArB,GAAK,OAAI,WAAM,IACpBoB,EAAY1C,EAAKO,MAAjBmC,QACFE,EAAeF,EAAQG,QAAQvB,GAC/BwB,EAAU7C,OAAA8C,EAAA,EAAA9C,CAAOyC,IAED,IAAlBE,EACFE,EAAWE,KAAK1B,GAEhBwB,EAAWG,OAAOL,EAAc,GAGlC5C,EAAKgB,SAAS,CACZ0B,QAASI,8EAIJ,IAAAI,EAAA/C,KACCgD,EAAYhD,KAAKjC,MAAjBiF,QAER,OACE3F,EAAAC,EAAAC,cAAA,OAAK0F,UAAWD,EAAQE,MACtB7F,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,KACG,CAAC,EAAG,EAAG,EAAG,GAAGuE,IAAI,SAAAV,GAAK,OACrB9D,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAU+F,IAAKlC,EAAOmC,UAAMC,EAAWC,OAAK,EAACC,QAAM,EAACC,QAASX,EAAKP,aAAarB,IAC7E9D,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CACEiF,SAAgD,IAAvCQ,EAAK3C,MAAMmC,QAAQG,QAAQvB,GACpCyC,UAAW,EACXC,eAAa,IAEfxG,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAcyG,QAAO,aAAAC,OAAe7C,EAAQ,KAC5C9D,EAAAC,EAAAC,cAAC0G,EAAA3G,EAAD,KACED,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAY6G,aAAW,YACrB9G,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,oBArCS+G,IAAMhC,WAoDlBiC,wBA5DA,SAAAC,GAAK,MAAK,CACvBrB,KAAM,CACJsB,MAAO,OACPC,SAAU,IACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,SAwD/BP,CAAmBhC,+LC5C5BwC,8MACJ1E,MAAQ,CACN2E,MAAM,KAGRC,YAAc,WACZnF,EAAKgB,SAAS,SAAAT,GAAK,MAAK,CAAE2E,MAAO3E,EAAM2E,iFAGhC,IACC/B,EAAYhD,KAAKjC,MAAjBiF,QAER,OACE3F,EAAAC,EAAAC,cAAA,OAAK0F,UAAWD,EAAQE,MACtB7F,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CACE0B,UAAU,MACViG,UAAW5H,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAe0B,UAAU,OAAzB,sBAEX3B,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAUmG,QAAM,GACdpG,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACED,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,OAEFD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAc+H,OAAK,EAACtB,QAAQ,eAE9B1G,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAUmG,QAAM,GACdpG,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACED,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,OAEFD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAc+H,OAAK,EAACtB,QAAQ,YAE9B1G,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAUmG,QAAM,EAACC,QAAS1D,KAAKgF,aAC7B3H,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACED,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,OAEFD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAc+H,OAAK,EAACtB,QAAQ,UAC3B/D,KAAKI,MAAM2E,KAAO1H,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,MAAiBD,EAAAC,EAAAC,cAACkI,GAAAnI,EAAD,OAEtCD,EAAAC,EAAAC,cAACmI,GAAApI,EAAD,CAAUqI,GAAI3F,KAAKI,MAAM2E,KAAMa,QAAQ,OAAOC,eAAa,GACzDxI,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CAAM0B,UAAU,MAAM8G,gBAAc,GAClCzI,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAUmG,QAAM,EAACR,UAAWD,EAAQ+C,QAClC1I,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACED,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,OAEFD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAc+H,OAAK,EAACtB,QAAQ,wBA3CnBM,IAAMhC,WAyDhBiC,wBApEA,SAAAC,GAAK,MAAK,CACvBrB,KAAM,CACJsB,MAAO,OACPC,SAAU,IACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5CkB,OAAQ,CACNE,YAAkC,EAArB1B,EAAM3C,QAAQsE,QA6DhB5B,CAAmBQ,IChEnBqB,oLAXX,OAAQ9I,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAC6I,EAAD,MACA/I,EAAAC,EAAAC,cAAC8I,EAAD,MAEAhJ,EAAAC,EAAAC,cAAC+I,GAAD,MACAjJ,EAAAC,EAAAC,cAACgJ,GAAD,cAPYlE,aCKEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzJ,EAAAC,EAAAC,cAACwJ,GAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzG,KAAK,SAAA0G,GACjCA,EAAaC","file":"static/js/main.352f12e4.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nconst NavBar = () => {\n    return(\n        <div>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"title\" color=\"inherit\">\n                React & Material-UI Sample Application\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\nexport default NavBar;","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nconst Course = (props) => {\n    console.log(props)\n    return(\n        <div>\n            { props.course ? (\n                <Card >\n                    <CardMedia style={{height: 0, paddingTop: '56.25%'}}\n                    image={props.course.fields.courseImage.fields.file.url}\n                    title={props.course.fields.title}\n                    />\n                    <CardContent>\n                    <Typography gutterBottom variant=\"headline\" component=\"h2\">\n                        {props.course.fields.title}\n                    </Typography>\n                    <Typography component=\"p\">\n                        {props.course.fields.description}\n                    </Typography>\n                    </CardContent>\n                    <CardActions>\n                    <Button size=\"small\" color=\"primary\" href={props.course.fields.url} target=\"_blank\">\n                        Go To Course\n                    </Button>\n                    </CardActions>\n                </Card>\n            ) : null}\n        </div>\n    )\n}\nexport default Course","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport * as contentful from 'contentful'\nimport Course from './Course'\nconst SPACE_ID = 'gbybqkdcr7pn'\nconst ACCESS_TOKEN = '7365be79d8d4d8073c93430eca3c7a0d0848fc2657697bbe996e7f15f96b4a22'\n\nconst client = contentful.createClient({\n    space: SPACE_ID,\n    accessToken: ACCESS_TOKEN,\n    basePath: \"https://preview.contentful.com\"\n})\nclass CoursesList extends Component {\n    state = {\n        courses: [],\n        searchString: ''\n    }\n    constructor() {\n        super()\n        this.getCourses()\n    }\n    getCourses = () => {\n        client.getEntries({\n            content_type: 'course',\n            query: this.state.searchString\n        })\n        .then((response) => {\n            this.setState({courses: response.items})\n            console.log(this.state.courses)\n        })\n        .catch((error) => {\n          console.log(\"Error occurred while fetching Entries\")\n          console.error(error)\n        })\n    }\n    onSearchInputChange = (event) => {\n        console.log(\"Search changed ...\" + event.target.value)\n        if (event.target.value) {\n            this.setState({searchString: event.target.value})\n        } else {\n            this.setState({searchString: ''})\n        }\n        this.getCourses()\n    }\n    render() {\n        return (\n            <div>\n                { this.state.courses ? (\n                    <div>\n                        <TextField style={{padding: 24}}\n                            id=\"searchInput\"\n                            placeholder=\"Search for Courses\"   \n                            margin=\"normal\"\n                            onChange={this.onSearchInputChange}\n                            />\n                        <Grid container spacing={24} style={{padding: 24}}>\n                            { this.state.courses.map(currentCourse => (\n                                <Grid item xs={12} sm={6} lg={4} xl={3}>\n                                    <Course course={currentCourse} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ) : \"No courses found\" }\n            </div>\n        )\n    }\n}\nexport default CoursesList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass CheckboxList extends React.Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {[0, 1, 2, 3].map(value => (\n            <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n              <Checkbox\n                checked={this.state.checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              />\n              <ListItemText primary={`Line item ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Comments\">\n                  <CommentIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass NestedList extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List\n          component=\"nav\"\n          subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Sent mail\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <DraftsIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Drafts\" />\n          </ListItem>\n          <ListItem button onClick={this.handleClick}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Inbox\" />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText inset primary=\"Starred\" />\n              </ListItem>\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    );\n  }\n}\n\nNestedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NestedList);","import React, { Component } from 'react'\nimport NavBar from './components/NavBar'\nimport CoursesList from './components/CoursesList'\nimport CheckboxList from './components/CheckboxList'\nimport NestedList from './components/NestedList'\n//import FloatingActionButtonZoom from './components/FloatingActionButtonZoom'\n\nclass App extends Component {\n  render() {\n    return (<div>\n      <NavBar />\n      <CoursesList />\n      \n      <CheckboxList/>\n      <NestedList />\n     \n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}